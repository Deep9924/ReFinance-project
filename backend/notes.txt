factory pattern: https://www.youtube.com/watch?v=kuirGzhGhyw&list=PLFKDYTlP3abzwWleHq1WHcKyi8nCPY74s&index=1
proxy pattern: https://www.youtube.com/watch?v=SFTpSFQNPts&list=PLFKDYTlP3abzwWleHq1WHcKyi8nCPY74s&index=7

Factory pattern: (create) To create new object of the stock, news and user data
                 (get) To return the stored 

Proxy pattern can be used in the Stock data controller:
      if the stock is not in proxy:
            fetch from database
            add to proxy
            use the update function to check if updated more than 5 mins ago
            return the stock data
      if updated more than 5 mins ago:
            fetch new data 
            update the proxy 
            update the database
      else return the proxy of stored stock data

Proxy pattern can be used in the News data controller:
      add news (admin):
            add to database
            fetch from database
            add to proxy
      remove news (admin):
            remove from database, if successful:
              remove from proxy
      get news (user):
            return the proxy of News data

Factory pattern can be used in the Stock data controller: 
      create: add stock (admin)
            check if the stock exist in the database
              return true if exist else false
            add to the database if false
            update the database of required info (stock info, news, graph)
            fetch from database
            add to proxy
            return the stock data
      read: 
            if proxy is null
              fetch from database and add to proxy
            if proxy data is null or updated more than 5 mins ago
              update the data and add to proxy
            return the proxy of stored stock data
      update:
            fetch new data 
            update the proxy 
            update the database
      delete: remove stock (admin)
            remove from database, if successful:
              remove from proxy

Factory pattern can be used in the News data controller: 
      create: add news (admin)
            add to database
            fetch from database
            add to proxy
      read: 
            if proxy is null
              fetch from database and add to proxy
            return the proxy of News data
      update:
      delete: remove news (admin)
            remove from database, if successful:
              remove from proxy

Factory pattern can be used in the User data controller: 
      create: add user (user)
            check if the user email exist in the database
              return true if exist else false
            convert password to hex or add salt
            add to the database if false
      read:
            check if the user credentials matches from the database
              if true return data (first name, avatar, favourites, last name (optional))
            return false
      update:
      delete:

controller{
  stock data = company info, company data, graph, news, last updated (proxy) (factory)
  news data = picture, title, description, link, uploaded date (proxy) (factory)
  search data = result of the search query
  user data = role, first name, last name, email, password, favourites, avatar (factory)
}

model{
  stock data = company info, company data, graph, news, last updated (proxy)
  news data = picture, title, description, link, uploaded date (proxy)
  search data = return the result of the passed search query
  user data = role, first name, last name, email, password, favourites, avatar

routes{
  stock data = /stockData
  news data = /news
  search data = /search
  user data = /user
}